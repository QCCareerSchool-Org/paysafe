import * as Environments from './environment';
import { RequestObject } from './request-object';
import { CardServiceHandler } from './card-service-handler';
import { CustomerServiceHandler } from './customer-service-handler';
import { DirectDebitServiceHandler } from './direct-debit-service-handler';
import { ThreeDSecureServiceHandler } from './three-d-secure-service-handler';
export declare class PaysafeAPIClient {
    private apiKey;
    private apiPassword;
    private environment;
    private accountNumber;
    private cardServiceHandler?;
    private customerServiceHandler?;
    private directDebitServiceHandler?;
    private threeDSecureServiceHandler?;
    private baseRequest;
    constructor(apiKey: string, apiPassword: string, environment: 'TEST' | 'LIVE', accountNumber: string);
    updateConfig(apiKey: string, apiPassword: string, environment: Environments.Environment, accountNumber: string): void;
    getApiKey(): string;
    getApiPassword(): string;
    getEnvironment(): Environments.Environment;
    getAccountNumber(): string;
    getCardServiceHandler(): CardServiceHandler;
    getDirectDebitServiceHandler(): DirectDebitServiceHandler;
    getCustomerServiceHandler(): CustomerServiceHandler;
    getThreeDSecureServiceHandler(): ThreeDSecureServiceHandler;
    get<T extends RequestObject>(uri: string, requestObject?: T): Promise<T>;
    post<T extends RequestObject>(uri: string, requestObject?: T): Promise<T>;
    put<T extends RequestObject>(uri: string, requestObject?: T): Promise<T>;
    delete<T extends RequestObject>(uri: string, requestObject?: T): Promise<T>;
    private process<T>(method, uri, requestObject?);
}
